App.vue:
<template>
  <Header 
    :active-section="activeSection" 
    :current-theme="theme"
    :is-scrolled="isHeaderScrolled"  @toggle-theme="toggleTheme"

  />
  
  <main class="main">
    <Home />
    <About />
    <Skills />
    <Qualification />
    <Services />
    <Portfolio />
    <Project />
    <Testimonial />
    <Contact />
  </main>
  
  <Footer />

  <a href="#" aria-label="scroll-up" class="scrollup" id="scroll-up" :class="{ 'show-scroll': showScrollBtn }">
    <i class="uil uil-arrow-up scrollup__icon"></i>
  </a>
</template>

<script setup>
import { ref, onMounted, onUnmounted, watch } from 'vue';

// Importamos todos los componentes
import Header from './components/Header.vue'
import Home from './components/Home.vue'
import About from './components/About.vue'
import Skills from './components/Skills.vue'
import Qualification from './components/Qualification.vue'
import Services from './components/Services.vue'
import Portfolio from './components/Portfolio.vue'
import Project from './components/Project.vue'
import Testimonial from './components/Testimonial.vue'
import Contact from './components/Contact.vue'
import Footer from './components/Footer.vue'

// Importamos los estilos globales


// --- LÓGICA REACTIVA GLOBAL ---

// 2. Variable para el botón de scroll (ya la teníamos)
const showScrollBtn = ref(false);
// 3. NUEVA: Variable para saber qué sección está activa
const activeSection = ref('home');
// 4. NUEVA: Variable para el tema (light/dark)
const theme = ref('light');
const isHeaderScrolled = ref(false);
// 5. NUEVA: Función para cambiar el tema
const toggleTheme = () => {
  theme.value = theme.value === 'light' ? 'dark' : 'light';
  localStorage.setItem('selected-theme', theme.value);
};

// 6. Usamos watch para reaccionar a los cambios en la variable 'theme'
watch(theme, (newTheme) => {
  if (newTheme === 'dark') {
    document.body.classList.add('dark-theme');
  } else {
    document.body.classList.remove('dark-theme');
  }
});

// 7. Modificamos la función de scroll para que haga ambas cosas
const handleScroll = () => {
  // Lógica para el botón de scroll
  showScrollBtn.value = window.scrollY >= 560;
  isHeaderScrolled.value = window.scrollY >= 80;
  // Lógica para la sección activa
  const scrollY = window.scrollY;
  const sections = document.querySelectorAll('section[id]');
  sections.forEach(current => {
    const sectionHeight = current.offsetHeight;
    const sectionTop = current.offsetTop - 58;
    const sectionId = current.getAttribute('id');

    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {
      activeSection.value = sectionId;
    }
  });
};

// 8. En onMounted, ahora también leemos el tema guardado en localStorage
onMounted(() => {
  window.addEventListener('scroll', handleScroll);
  const savedTheme = localStorage.getItem('selected-theme');
  if (savedTheme) {
    theme.value = savedTheme;
  }
});

onUnmounted(() => {
  window.removeEventListener('scroll', handleScroll);
});
</script>

<style scoped>
.main {
  overflow-x: hidden; /* Opcional, si es necesario */
  margin-top: -4rem; /* <--- Añade esta línea para subir todo */
}

.scrollup {
  position: fixed;
  right: 1rem;
  bottom: -20%;
  background-color: var(--first-color);
  opacity: .8;
  padding: 0 .3rem;
  border-radius: .4rem;
  z-index: var(--z-tooltip);
  transition: .4s;
}

.scrollup:hover {
  background-color: var(--first-color-alt);
}

.scrollup__icon {
  font-size: 1.5rem;
  color: #fff;
}

.show-scroll {
  bottom: 3rem;
}

/* Media Queries para el botón de scroll */
@media screen and (min-width: 768px) {
  .show-scroll {
    bottom: 3rem;
  }
}
</style>

main.js:
// main.js
import { createApp } from 'vue'
import App from './App.vue'

// IMPORTA LOS ESTILOS DE SWIPER
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import '@iconscout/unicons/css/line.css'

import './assets/css/global.css' // Tu archivo global

createApp(App).mount('#app')

style.css:
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}

a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}

button:hover {
  border-color: #646cff;
}

button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

.card {
  padding: 2em;
}

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }

  a:hover {
    color: #747bff;
  }

  button {
    background-color: #f9f9f9;
  }
}

global.css:
/*==================== GOOGLE FONTS ====================*/
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

/*==================== VARIABLES CSS ====================*/
:root {
  --header-height: 3rem;
  --hue-color: 250; /* Cambia tu color favorito */

  /* HSL color mode */
  --first-color: hsl(var(--hue-color), 69%, 61%);
  --first-color-2: hsl(var(--hue-color), 69%, 70%);
  --first-color-3: hsl(var(--hue-color), 69%, 66%);
  --first-color-second: hsl(var(--hue-color), 69%, 61%);
  --first-color-alt: hsl(var(--hue-color), 57%, 53%);
  --first-color-lighter: hsl(var(--hue-color), 92%, 85%);
  --title-color: hsl(var(--hue-color), 8%, 15%);
  --text-color: hsl(var(--hue-color), 8%, 45%);
  --text-color-light: hsl(var(--hue-color), 8%, 65%);
  --input-color: hsl(var(--hue-color), 70%, 96%);
  --body-color: hsl(var(--hue-color), 60%, 99%);
  --container-color: #fff;
  --scroll-bar-color: hsl(var(--hue-color), 12%, 90%);
  --scroll-thumb-color: hsl(var(--hue-color), 12%, 80%);

  /* Font and typography */
  --body-font: "Poppins", sans-serif;
  --big-font-size: 2rem;
  --h1-font-size: 1.5rem;
  --h2-font-size: 1.25rem;
  --h3-font-size: 1.125rem;
  --normal-font-size: .938rem;
  --small-font-size: .813rem;
  --smaller-font-size: .75rem;

  /* Font weight */
  --font-medium: 500;
  --font-semi-bold: 600;

  /* Margenes Bottom */
  --mb-0-25: .25rem;
  --mb-0-5: .5rem;
  --mb-0-75: .75rem;
  --mb-1: 1rem;
  --mb-1-5: 1.5rem;
  --mb-2: 2rem;
  --mb-2-5: 2.5rem;
  --mb-3: 3rem;

  /* z index */
  --z-tooltip: 10;
  --z-fixed: 100;
  --z-modal: 1000;
}

@media screen and (min-width: 968px) {
  :root {
    --big-font-size: 3rem;
    --h1-font-size: 2.25rem;
    --h2-font-size: 1.5rem;
    --h3-font-size: 1.25rem;
    --normal-font-size: 1rem;
    --small-font-size: .875rem;
    --smaller-font-size: .813rem;
  }
}

/*==================== Variables Dark theme ====================*/
body.dark-theme {
  --first-color-second: hsl(var(--hue-color), 30%, 8%);
  --title-color: hsl(var(--hue-color), 8%, 95%);
  --text-color: hsl(var(--hue-color), 8%, 75%);
  --input-color: hsl(var(--hue-color), 29%, 16%);
  --body-color: hsl(var(--hue-color), 28%, 12%);
  --container-color: hsl(var(--hue-color), 29%, 16%);
  --scroll-bar-color: hsl(var(--hue-color), 12%, 48%);
  --scroll-thumb-color: hsl(var(--hue-color), 12%, 36%);
}

/*==================== BASE ====================*/
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0 0 var(--header-height) 0;
  font-family: var(--body-font);
  font-size: var(--normal-font-size);
  background: linear-gradient(135deg, #ffffff 0%, #d8dfff 100%) fixed no-repeat;
  color: var(--text-color);
  position: relative;
  overflow-x: hidden;
}

body::after {
  content: "";
  position: fixed;
  bottom: -120px;
  left: 0;
  width: 100%;
  height: 339px;
  background:
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'><path fill='%236e58e0' fill-opacity='1' d='M0,160L80,154.7C160,149,320,139,480,154.7C640,171,800,213,960,224C1120,235,1280,213,1360,202.7L1440,192L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z'/></svg>") no-repeat center bottom,
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'><path fill='%236e58e0' fill-opacity='0.5' d='M0,224L60,234.7C120,245,240,267,360,266.7C480,267,600,245,720,213.3C840,181,960,139,1080,144C1200,149,1320,203,1380,229.3L1440,256L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z'/></svg>") no-repeat center bottom;
  background-size: 100% 100%, 100% 100%;
  z-index: -1;
  pointer-events: none;
}


h1, h2, h3, h4 {
  color: var(--title-color);
  font-weight: var(--font-semi-bold);
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
  height: auto;
}

/*==================== REUSABLE CSS CLASSES ====================*/
.section {
  padding: 2rem 0 4rem;
}

.section__title {
  font-size: var(--h1-font-size);
  text-align: center;
}

.section__subtitle {
  display: block;
  font-size: var(--small-font-size);
  margin-bottom: var(--mb-3);
  text-align: center;
}

.container {
  max-width: 768px;
  margin-left: var(--mb-1-5);
  margin-right: var(--mb-1-5);
}

.grid {
  display: grid;
  gap: 1.5rem;
}

/*==================== BUTTONS ====================*/
.button {
  display: inline-block;
  background-color: var(--first-color);
  color: #fff;
  padding: 1rem;
  border-radius: .5rem;
  font-weight: var(--font-medium);
}

.button:hover {
  background-color: var(--first-color-alt);
}

.button__icon {
  font-size: 1.25rem;
  margin-left: var(--mb-0-5);
  transition: .3s;
}

.button--white {
  background-color: #fff;
  color: var(--first-color);
}

.button--white:hover {
  background-color: #fff;
}

.button--flex {
  display: inline-flex;
  align-items: center;
}

.button--small {
  padding: .75rem 1rem;
}

.button--link {
  padding: 0;
  background-color: transparent;
  color: var(--first-color);
}

.button--link:hover {
  background-color: transparent;
  color: var(--first-color-alt);
}

/*==================== GLOBAL COMPONENT STYLES ====================*/
.scroll-header {
  box-shadow: 0 -1px 4px rgba(0, 0, 0, .15);
}

/*==================== SCROLL BAR ====================*/
::-webkit-scrollbar {
  width: .60rem;
  background-color: var(--scroll-bar-color);
  border-radius: .5rem;
}

::-webkit-scrollbar-thumb {
  background-color: var(--scroll-thumb-color);
  border-radius: .5rem;
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--text-color-light);
}

/*==================== MEDIA QUERIES ====================*/
/* For small devices */
@media screen and (max-width: 350px) {
  .container {
    margin-left: var(--mb-1);
    margin-right: var(--mb-1);
  }
}

/* For medium devices */
@media screen and (min-width: 768px) {
  body {
    margin: 0;
  }

  .section {
    padding: 6rem 0 2rem;
  }

  .section__subtitle {
    margin-bottom: 4rem;
  }

  .container {
    margin-left: auto;
    margin-right: auto;
  }
}

/* For large devices */
@media screen and (min-width: 1024px) {
    .container {
        padding: 0;
    }
}

/* ==================== AJUSTE PARA MONITORES GRANDES ==================== */
/* Cuando la pantalla tenga un ancho de 1600px o más... */

@media screen and (min-width: 1600px) {
  body {
    /* ...aplicamos un zoom general del 125% a toda la página. */
    zoom: 1.25;
  }
}

About.vue:
<template>
  <section class="about section" id="about">
    <h2 class="section__title">About Me</h2>
    <span class="section__subtitle">My introduction</span>

    <div class="about__container container grid">
      <img src="@/assets/img/about.jpg" alt="about" class="about__img">
      <div class="about__data">
        <p class="about__description">
          Desarrollador web, con conocimiento y experiencia, trabajando en tecnologías web y diseño UX / UI, entregando un trabajo de calidad.
        </p>
        <div class="about__info">
          <div>
            <span class="about__info-title">08+</span>
            <span class="about__info-name">Years <br> experience</span>
          </div>
          <div>
            <span class="about__info-title">20+</span>
            <span class="about__info-name">Completed <br> project</span>
          </div>
          <div>
            <span class="about__info-title">05+</span>
            <span class="about__info-name">Companies <br> worked</span>
          </div>
        </div>
        <div class="about__buttons">
          <a href="/Alexa-Cv.pdf" download class="button button--flex">
            Download CV<i class="uil uil-download-alt button__icon"></i>
          </a>
        </div>
      </div>
    </div>
  </section>
</template>

<script>
export default {
  name: 'About'
}
</script>

Contact.vue:
<template>
  <section class="contact section" id="contact">
    <h2 class="section__title">Contact Me</h2>
    <span class="section__subtitle">Get in touch</span>

    <div class="contact__container container grid">
      <div>
        <div class="contact__information">
          <i class="uil uil-phone contact__icon"></i>
          <div>
            <h3 class="contact__title">Call Me</h3>
            <span class="contact__subtitle">999-777-666</span>
          </div>
        </div>
        <div class="contact__information">
          <i class="uil uil-envelope contact__icon"></i>
          <div>
            <h3 class="contact__title">Email</h3>
            <span class="contact__subtitle">alexa@email.com</span>
          </div>
        </div>
        <div class="contact__information">
          <i class="uil uil-map-marker contact__icon"></i>
          <div>
            <h3 class="contact__title">Location</h3>
            <span class="contact__subtitle">Peru - Lima Av. Bolivar #123</span>
          </div>
        </div>
      </div>

      <form @submit.prevent="handleSubmit" class="contact__form grid">
        <div class="contact__inputs grid">
          <div class="contact__content">
            <label for="name" class="contact__label">Name</label>
            <input type="text" id="name" class="contact__input" v-model="formData.name">
          </div>
          <div class="contact__content">
            <label for="email" class="contact__label">Email</label>
            <input type="email" id="email" class="contact__input" v-model="formData.email">
          </div>
          <div class="contact__content">
            <label for="project" class="contact__label">Project</label>
            <input type="text" id="project" class="contact__input" v-model="formData.project">
          </div>
          <div class="contact__content">
            <label for="message" class="contact__label">Message</label>
            <textarea id="message" cols="0" rows="7" class="contact__input" v-model="formData.message"></textarea>
          </div>
          <div>
            <button type="submit" class="button button--flex">
              Send Message
              <i class="uil uil-message button__icon"></i>
            </button>
          </div>
        </div>
      </form>
    </div>
  </section>
</template>

<script setup>
import { ref } from 'vue';

// Creamos un objeto reactivo para almacenar todos los datos del formulario
const formData = ref({
  name: '',
  email: '',
  project: '',
  message: ''
});

const handleSubmit = () => {
  console.log('Form data submitted:', formData.value);
  // Aquí iría la lógica para enviar el formulario a un backend
  alert('Mensaje enviado (revisa la consola para ver los datos).');
  // Opcional: limpiar el formulario después de enviar
  formData.value = { name: '', email: '', project: '', message: '' };
};
</script>
<style scoped>
.contact__container {
  row-gap: 3rem;
}
.contact__information {
  display: flex;
  margin-bottom: var(--mb-2);
  align-items: center;
}
.contact__icon {
  font-size: 2rem;
  color: var(--first-color);
  margin-right: var(--mb-0-75);
}
.contact__title {
  font-size: var(--h3-font-size);
  font-weight: var(--font-medium);
}
.contact__subtitle {
  font-size: var(--small-font-size);
  color: var(--text-color-light);
}
.contact__content {
  background-color: var(--input-color);
  border-radius: .5rem;
  padding: .75rem 1rem .25rem;
}
.contact__label {
  font-size: var(--smaller-font-size);
  color: var(--title-color);
}
.contact__input {
  width: 100%;
  background-color: var(--input-color);
  color: var(--text-color);
  font-family: var(--body-font);
  font-size: var(--normal-font-size);
  border: none;
  outline: none;
  padding: .25rem .5rem .5rem 0;
}
textarea.contact__input {
  resize: vertical;
}

/* Media Queries */
@media screen and (min-width: 568px) {
  .contact__container {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (min-width: 1024px) {
  .contact__form {
    width: 460px;
  }
  .contact__inputs {
    grid-template-columns: repeat(2, 1fr);
  }
}
</style>

Footer.vue:
<template>
  <footer class="footer">
    <div class="footer__bg">
      <div class="footer__container container grid">
        <div>
          <h1 class="footer__title">Alexa</h1>
          <span class="footer__subtitle">Frontend developer</span>
        </div>
        <ul class="footer__links">
          <li>
            <a href="#services" class="footer__link">Services</a>
          </li>
          <li>
            <a href="#portfolio" class="footer__link">Portfolio</a>
          </li>
          <li>
            <a href="#contact" class="footer__link">Contactme</a>
          </li>
        </ul>
        <div class="footer__socials">
          <a href="https://www.facebook.com/" aria-label="footer__social" target="_blank" class="footer__social">
            <i class="uil uil-facebook-f"></i>
          </a>
          <a href="https://www.instagram.com/" aria-label="footer__social" target="_blank" class="footer__social">
            <i class="uil uil-instagram"></i>
          </a>
          <a href="https://twitter.com/" aria-label="footer__social" target="_blank" class="footer__social">
            <i class="uil uil-twitter-alt"></i>
          </a>
        </div>
      </div>
      <p class="footer__copy">&#169; CodeWithPankaj. All right reserved</p>
    </div>
  </footer>
</template>

<script>
export default {
  name: 'Footer'
}
</script>
<style scoped>
.footer {
  padding-top: 2rem;
}
.footer__container {
  row-gap: 3.5rem;
}
.footer__bg {
  background-color: var(--first-color-second);
  padding: 2rem 0 3rem;
}
.footer__title {
  font-size: var(--h1-font-size);
  margin-bottom: var(--mb-0-25);
}
.footer__subtitle {
  font-size: var(--small-font-size);
}
.footer__links {
  display: flex;
  flex-direction: column;
  row-gap: 1.5rem;
}
.footer__link:hover {
  color: var(--first-color-lighter);
}
.footer__social {
  font-size: 1.25rem;
  margin-right: var(--mb-1-5);
}
.footer__social:hover {
  color: var(--first-color-lighter);
}
.footer__copy {
  font-size: var(--smaller-font-size);
  text-align: center;
  color: var(--text-color-light);
  margin-top: var(--mb-3);
}
.footer__title,
.footer__subtitle,
.footer__link,
.footer__social {
  color: #fff;
}

/* Media Queries */
@media screen and (min-width: 568px) {
  .footer__container {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (min-width: 768px) {
  .footer__container {
    padding: 0 1rem;
    grid-template-columns: repeat(3, 1fr);
  }
  .footer__bg {
    padding: 3rem 0 3.5rem;
  }
  .footer__links {
    flex-direction: row;
    column-gap: 2rem;
  }
  .footer__socials {
    justify-self: flex-end;
  }
  .footer__copy {
    margin-top: 4.5rem;
  }
}
@media screen and (min-width: 1024px) {
  .footer__container {
    padding: 0;
  }
}
</style>

Header.vue:
<template>
  <header class="header" id="header" :class="{ 'scroll-header': isScrolled }">
    <nav class="nav container">
      <a href="#" class="nav__logo">GalvezDev</a>
      <div class="nav__menu" id="nav-menu" :class="{ 'show-menu': isMenuOpen }">
        <ul class="nav__list grid">
          <li class="nav__item">
            <a href="#home" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'home' }">
              <i class="uil uil-estate nav__icon"></i> Home
            </a>
          </li>
          <li class="nav__item">
            <a href="#about" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'about' }">
              <i class="uil uil-user nav__icon"></i> About
            </a>
          </li>
          <li class="nav__item">
            <a href="#skills" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'skills' }">
              <i class="uil uil-file-alt nav__icon"></i> Skills
            </a>
          </li>
          <li class="nav__item">
            <a href="#services" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'services' }">
              <i class="uil uil-briefcase-alt nav__icon"></i> Services
            </a>
          </li>
          <li class="nav__item">
            <a href="#portfolio" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'portfolio' }">
              <i class="uil uil-scenery nav__icon"></i> Portfolio
            </a>
          </li>
          <li class="nav__item">
            <a href="#contact" class="nav__link" @click="closeMenu" :class="{ 'active-link': activeSection === 'contact' }">
              <i class="uil uil-message nav__icon"></i> ContactMe
            </a>
          </li>
        </ul>
        <i class="uil uil-times nav__close" id="nav-close" @click="closeMenu"></i>
      </div>
      <div class="nav__btns">
        <i 
          @click="$emit('toggle-theme')" 
          class="uil change-theme" 
          id="theme-button"
          :class="currentTheme === 'dark' ? 'uil-sun' : 'uil-moon'"
        ></i>

        <div class="nav__toggle" id="nav-toggle" @click="openMenu">
          <i class="uil uil-apps"></i>
        </div>
      </div>
    </nav>
  </header>
</template>

<script setup>
import { ref } from 'vue';

// Lógica del menú móvil
const isMenuOpen = ref(false);
const openMenu = () => isMenuOpen.value = true;
const closeMenu = () => isMenuOpen.value = false;

// Declaramos las props y los emits
defineProps({
  activeSection: String,
  currentTheme: String,
  isScrolled: Boolean
});
defineEmits(['toggle-theme']);
</script>

<style scoped>

/* ==================== BASE ESTILOS (MOBILE-FIRST) ==================== */

.header {
  width: 100%;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: var(--z-fixed);
  background-color: var(--first-color-3); /* Color del CSS original para la barra inferior */
}

/* --- NAV --- */
.nav {
  max-width: 968px;
  height: var(--header-height);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nav__logo,
.nav__toggle {
  color: white; /* El logo y el toggle son blancos en móvil */
  font-weight: var(--font-medium);
}

.nav__logo:hover {
  color: white; /* Mantenemos el color al hacer hover */
}

.nav__toggle {
  font-size: 1.1rem;
  cursor: pointer;
}

.nav__toggle:hover {
  color: var(--first-color-lighter); /* Un color más claro al hacer hover para feedback */
}

/* --- Menú desplegable --- */
.nav__menu {
  position: fixed;
  bottom: -100%; /* Oculto por defecto */
  left: 0;
  width: 100%;
  background-color: var(--body-color);
  padding: 2rem 1.5rem 4rem;
  box-shadow: 0 -1px 4px rgba(0, 0, 0, 0.15);
  border-radius: 1.5rem 1.5rem 0 0;
  transition: .3s;
}

/* Clase para mostrar el menú */
.show-menu {
  bottom: 0;
}

.nav__list {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
}

.nav__link {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: var(--small-font-size);
  color: var(--title-color); /* Color de texto para los items dentro del menú desplegable */
  font-weight: var(--font-medium);
}

/* Al estar dentro del menú, el active-link solo cambia de color */
.nav__menu .active-link {
   color: var(--first-color);
}

.nav__icon {
  font-size: 1.2rem;
}

.nav__close {
  position: absolute;
  right: 1.3rem;
  bottom: .5rem;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--first-color);
}

.nav__close:hover {
  color: var(--first-color-alt);
}

/* --- Botones de Navegación (Tema) --- */
.nav__btns {
  display: flex;
  align-items: center;
}

.change-theme {
  font-size: 1.25rem;
  color: white; /* El ícono de tema es blanco en móvil */
  margin-right: var(--mb-1);
  cursor: pointer;
}

.change-theme:hover {
  color: var(--first-color-lighter);
}

/* --- Active link en la barra inferior (con animación) --- */
.active-link {
  color: white;
  background-color: hsl(var(--hue-color), 65%, 65%);
  box-shadow:
    0 -10px 0 15px hsl(var(--hue-color), 65%, 65%),
    0 10px 0 15px hsl(var(--hue-color), 65%, 65%);
  animation: showThenFade 4s ease-in-out forwards;
}

@keyframes showThenFade {
  0%, 90% { /* Muestra el efecto por un tiempo */
    background-color: hsl(var(--hue-color), 65%, 65%);
    box-shadow:
      0 -10px 0 15px hsl(var(--hue-color), 65%, 65%),
      0 10px 0 15px hsl(var(--hue-color), 65%, 65%);
  }
  100% { /* Se desvanece al final */
    background-color: transparent;
    box-shadow: none;
  }
}

/* Clase para la sombra al hacer scroll (se aplica con JS) */
.scroll-header {
  box-shadow: 0 -1px 4px rgba(0, 0, 0, 0.15);
}


/* ==================== ESTILOS PARA TABLET Y SUPERIOR (>= 768px) ==================== */
/* ==================== ESTILOS PARA TABLET Y SUPERIOR (>= 768px) ==================== */
@media screen and (min-width: 768px) {
  .header {
    top: 0; /* Header arriba */
    bottom: initial;
    padding: 0 1rem;
    /* [!code --] background-color: var(--body-color); */
    background-color: var(--first-color-3); /* [!code ++] Mantenemos el color púrpura */
  }

  .nav {
    height: calc(var(--header-height) + 1.5rem);
    column-gap: 1rem;
  }

  /* Reset y ajuste de elementos del menú */
  .nav__menu {
    position: static;
    width: auto;
    background-color: transparent;
    padding: 0;
    box-shadow: none;
    border-radius: 0;
  }
  
  .nav__list {
    display: flex;
    column-gap: 2rem;
    margin-left: 8rem;
  }

  .nav__link {
    flex-direction: row;
    /* [!code --] color: var(--title-color); */
    color: white; /* [!code ++] Letras de los enlaces en blanco */
    transition: transform 0.3s ease;
  }
  
  /* Se ocultan los elementos que no se usan en escritorio */
  .nav__icon,
  .nav__close,
  .nav__toggle {
    display: none;
  }

/* --- [!code ++] ESTA ES LA PARTE CORREGIDA --- */
  .nav__link:hover {
    /* Al pasar el mouse, solo cambiamos el tamaño. Hereda el color blanco. */
    transform: scale(1.2);
  }

  .active-link {
    /* El enlace activo es grande por defecto y quitamos los estilos de móvil. */
    transform: scale(1.2);
    color: rgb(255, 255, 231) !important;
    background-color: transparent;
    box-shadow: none;
    animation: none;
  }
  /* --- [!code --] FIN DE LA CORRECCIÓN --- */
  
  .change-theme {
    margin: 0;
    color: white;
  }
  .nav__logo {
     color: white; /* Logo en blanco */
     transition: transform 0.3s ease; /* [!code ++] Añadimos también transición al logo */
  }

  .nav__logo:hover {
    transform: scale(1.05); /* [!code update] Agrandamos un poco el logo al pasar el mouse */
    color: white; /* Mantenemos el color */
  }
}
</style>

Home.vue:
<template>
  <section class="home section" id="home">
    <div class="home__container container grid">
      <div class="home__content grid">
        <div class="home__social">
          <a href="https://www.linkedin.com/in/henry-galvez-quilla-26367b281" aria-label="home__social-icon" target="_blank" class="home__social-icon">
            <i class="uil uil-linkedin-alt"></i>
          </a>
          <a href="https://dribbble.com/" aria-label="home__social-icon" target="_blank" class="home__social-icon">
            <i class="uil uil-dribbble"></i>
          </a>
          <a href="https://github.com/HenryGalvezQ" aria-label="home__social-icon" target="_blank" class="home__social-icon">
            <i class="uil uil-github-alt"></i>
          </a>
        </div>
        <div class="home__img">
          <svg class="home__blob" viewBox="0 0 200 187" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <mask id="mask0" mask-type="alpha">
              <path d="M190.312 36.4879C206.582 62.1187 201.309 102.826 182.328 134.186C163.346 165.547 
                            130.807 187.559 100.226 186.353C69.6454 185.297 41.0228 161.023 21.7403 129.362C2.45775 
                            97.8511 -7.48481 59.1033 6.67581 34.5279C20.9871 10.1032 59.7028 -0.149132 97.9666 
                            0.00163737C136.23 0.303176 174.193 10.857 190.312 36.4879Z" />
            </mask>
            <g mask="url(#mask0)">
              <path d="M190.312 36.4879C206.582 62.1187 201.309 102.826 182.328 134.186C163.346 
                            165.547 130.807 187.559 100.226 186.353C69.6454 185.297 41.0228 161.023 21.7403 
                            129.362C2.45775 97.8511 -7.48481 59.1033 6.67581 34.5279C20.9871 10.1032 59.7028 
                            -0.149132 97.9666 0.00163737C136.23 0.303176 174.193 10.857 190.312 36.4879Z" />
              <image class="home__blob-img" x="12" y="18" href="@/assets/img/perfil.png" />
            </g>
          </svg>
        </div>
        <div class="home__data">
          <h1 class="home__title">Hi, I'am Henry</h1>
          <h3 class="home__subtitle">  <span>Ingeniero de Sistemas</span><br><span>Frontend Developer - UX/UI Designer</span></h3>
          <p class="home__discription">Experiencia de alto nivel en diseño y desarrollo web, produciendo
            trabajos de calidad.</p>
          <a href="#contact" class="button button--flex">
            Contacto<i class="uil uil-message button__icon"></i>
          </a>
        </div>
      </div>
      <div class="home__scroll">
        <a href="#about" class="home__scroll-button button--flex">
          <i class="uil uil-mouse-alt home__scroll-mouse"></i>
          <span class="home__scroll-name">Scroll down</span>
          <i class="uil uil-arrow-down"></i>
        </a>
      </div>
    </div>
  </section>
</template>

<style scoped>
.home__container {
  gap: 1rem;
  position: relative; /* [!code update] Se añade la posición relativa */
}
.home__content {
  grid-template-columns: .5fr 3fr;
  padding-top: 3.5rem;
  align-items: center;
}
.home__social {
  display: grid;
  grid-template-columns: max-content;
  row-gap: 1rem;
}
.home__social-icon {
  font-size: 1.25rem;
  color: var(--first-color);
}
.home__social-icon:hover {
  color: var(--first-color-alt);
}
.home__blob {
  width: 200px;
  fill: var(--first-color-2); /* [!code update] Corregido al color original */
}
.home__blob-img {
  width: 170px;
}
.home__data {
  grid-column: 1/3;
}
.home__title {
  font-size: var(--big-font-size);
}
.home__subtitle {
  font-size: var(--h3-font-size);
  color: var(--text-color);
  font-weight: var(--font-medium);
  margin-bottom: var(--mb-0-75);
}
.home__discription {
  margin-bottom: var(--mb-2);
  color: black;
}
.home__scroll {
  display: none;
  position: absolute;
  top: 495px;      /* [!code update] Se añade la propiedad 'top' que faltaba */
  right: 1.5rem;   /* [!code update] Se corrige el valor de 'right' */
  bottom: 4rem;
 
}
.home__scroll-button {
  color: var(--first-color);
  transition: .3s;
}
.home__scroll-button:hover {
  transform: translateY(.25rem);
}
.home__scroll-mouse {
  font-size: 2rem;
}
.home__scroll-name {
  font-size: var(--small-font-size);
  color: var(--title-color);
  font-weight: var(--font-medium);
  margin-right: var(--mb-0-25);
}
.home__scroll-arrow {
  font-size: 1.25rem;
}

/* Media Queries para Home */
@media screen and (max-width: 350px) {
  .home__content {
    grid-template-columns: .25fr 3fr;
  }
  .home__blob {
    width: 180px;
  }
}
@media screen and (min-width: 568px) {
  .home__content {
    grid-template-columns: max-content 1fr 1fr;
  }
  .home__data {
    grid-column: initial;
  }
  .home__img {
    order: 1;
    justify-self: center;
  }
}
@media screen and (min-width: 768px) {
  .home__container {
    row-gap: 5rem;
    padding-top: 4rem;
  }
  .home__content {
    padding-top: 5.5rem;
    column-gap: 2rem;
  }
  .home__blob {
    width: 270px;
  }
  .home__scroll {
    display: block;
  }
  .home__scroll-button {
    margin-left: 3rem;
  }
}
@media screen and (min-width: 1024px) {
  .home__blob {
    width: 320px;
  }
  .home__social {
    transform: translateX(-6rem);
  }

}
</style>

Portfolio.vue:
<template>
  <section class="portfolio section" id="portfolio">
    <h2 class="section__title">Portfolio</h2>
    <span class="section__subtitle">Most recent work</span>

    <div class="portfolio__container container swiper-container">
      <div class="swiper-wrapper">
        <div class="portfolio__content grid swiper-slide">
          <img src="@/assets/img/portfolio1.jpg" alt="portfolio image 1" class="portfolio__img">
          <div class="portfolio__data">
            <h3 class="portfolio__title">Modern Website</h3>
            <p class="portfolio__description">Website adaptable to all devices, with ui components and animated interactions.</p>
            <a href="#" class="button button--flex button--small portfolio__button">
              Demo
              <i class="uil uil-arrow-right button__icon"></i>
            </a>
          </div>
        </div>

        <div class="portfolio__content grid swiper-slide">
          <img src="@/assets/img/portfolio2.jpg" alt="portfolio image 2" class="portfolio__img">
          <div class="portfolio__data">
            <h3 class="portfolio__title">Brand Design</h3>
            <p class="portfolio__description">Website adaptable to all devices, with ui components and animated interactions.</p>
            <a href="#" class="button button--flex button--small portfolio__button">
              Demo
              <i class="uil uil-arrow-right button__icon"></i>
            </a>
          </div>
        </div>

        <div class="portfolio__content grid swiper-slide">
          <img src="@/assets/img/portfolio3.jpg" alt="portfolio image 3" class="portfolio__img">
          <div class="portfolio__data">
            <h3 class="portfolio__title">Online Store</h3>
            <p class="portfolio__description">Website adaptable to all devices, with ui components and animated interactions.</p>
            <a href="#" class="button button--flex button--small portfolio__button">
              Demo
              <i class="uil uil-arrow-right button__icon"></i>
            </a>
          </div>
        </div>
      </div>

      <div class="swiper-button-next">
        <i class="uil uil-angle-right-b swiper-portfolio-icon"></i>
      </div>
      <div class="swiper-button-prev">
        <i class="uil uil-angle-left-b swiper-portfolio-icon"></i>
      </div>

      <div class="swiper-pagination"></div>
    </div>
  </section>
</template>

<script setup>
import { onMounted } from 'vue';

// Importaciones de Swiper
import Swiper from 'swiper';
import { Navigation, Pagination } from 'swiper/modules';

// Importa los estilos de Swiper
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';

// El hook onMounted asegura que el DOM está listo
onMounted(() => {
  new Swiper('.portfolio__container', {
    // Configura Swiper para usar los módulos importados
    modules: [Navigation, Pagination],
    cssMode: true,
    loop: true,
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },
  });
});
</script>
<style scoped>
/* Necesitamos hacer estos estilos globales para que Swiper funcione bien desde el componente */
:global(.portfolio__container) {
  overflow: initial;
}
:global(.swiper-button-prev::after),
:global(.swiper-button-next::after) {
  content: '';
}
:global(.swiper-portfolio-icon) {
  font-size: 2rem;
  color: var(--first-color);
}
:global(.swiper-button-prev) {
  left: -.5rem;
}
:global(.swiper-button-next) {
  right: -.5rem;
}
:global(.swiper-pagination-bullet-active) {
  background-color: var(--first-color);
}
:global(.swiper-button-prev),
:global(.swiper-button-next),
:global(.swiper-pagination-bullet) {
  outline: none;
}
:global(.swiper-container-horizontal > .swiper-pagination-bullets) {
  bottom: -2.5rem;
}
/* Fin de estilos globales */

.portfolio__content {
  padding: 0 1.5rem;
}
.portfolio__img {
  width: 265px;
  border-radius: .5rem;
  justify-self: center;
}
.portfolio__title {
  font-size: var(--h3-font-size);
  margin-bottom: var(--mb-0-5);
}
.portfolio__description {
  margin-bottom: var(--mb-0-75);
}
.portfolio__button:hover .button__icon {
  transform: translateX(.25rem);
}

/* Media Queries */
@media screen and (min-width: 568px) {
  .portfolio__content {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (min-width: 768px) {
  .portfolio__img {
    width: 320px;
  }
  .portfolio__content {
    align-items: center;
  }
}
@media screen and (min-width: 1024px) {
  .portfolio__content {
    column-gap: 5rem;
  }
  :global(.swiper-portfolio-icon) {
    font-size: 3.5rem;
  }
  :global(.swiper-button-prev) {
    left: -3.5rem;
  }
  :global(.swiper-button-next) {
    right: -3.5rem;
  }
  :global(.swiper-container-horizontal > .swiper-pagination-bullets) {
    bottom: -4.5rem;
  }
}
</style>

Project.vue:
<template>
  <section class="project section">
    <div class="project__bg">
      <div class="project__container container grid">
        <div class="project__data">
          <h2 class="project__title">You have a new project</h2>
          <p class="project__description">Contact me now and get a 30% discount on your new project.</p>
          <a href="#contact" class="button button--flex button--white">
            Contact Me
            <i class="uil uil-message project__icon button__icon"></i>
          </a>
        </div>
        <img src="@/assets/img/project.png" alt="project image" class="project__img">
      </div>
    </div>
  </section>
</template>

<script>
export default {
  name: 'Project'
}
</script>
<style scoped>
.project {
  text-align: center;
}
.project__bg {
  background-color: var(--first-color-second);
  padding-top: 3rem;
}
.project__title {
  font-size: var(--h2-font-size);
  margin-bottom: var(--mb-0-75);
  color: #fff;
}
.project__description {
  margin-bottom: var(--mb-1-5);
  color: #fff;
}
.project__img {
  width: 232px;
  justify-self: center;
}

/* Media Queries */
@media screen and (max-width: 350px) {
  .project__img {
    width: 200px;
  }
}
@media screen and (min-width: 568px) {
  .project__container {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (min-width: 768px) {
  .project {
    text-align: initial;
  }
  .project__bg {
    background: none;
  }
  .project__container {
    background-color: var(--first-color-second);
    border-radius: 1rem;
    padding: 3rem 2.5rem 0;
    grid-template-columns: 1fr max-content;
    column-gap: 3rem;
  }
  .project__data {
    padding-top: .8rem;
  }
}
</style>

Qualification.vue:
<template>
  <section class="qualification section">
    <h2 class="section__title">Qualification</h2>
    <span class="section__subtitle">My personal journey</span>

    <div class="qualification__container container">
      <div class="qualification__tabs">
        <div 
          class="qualification__button button--flex" 
          @click="setActiveTab('education')"
          :class="{ 'qualification__active': activeTab === 'education' }">
          <i class="uil uil-graduation-cap qualification__icon"></i>
          Education
        </div>
        <div 
          class="qualification__button button--flex" 
          @click="setActiveTab('work')"
          :class="{ 'qualification__active': activeTab === 'work' }">
          <i class="uil uil-briefcase-alt qualification__icon"></i>
          Work
        </div>
      </div>

      <div class="qualification__sections">
        <div class="qualification__content" v-show="activeTab === 'education'">
          <div class="qualification__data">
            <div>
              <h3 class="qualification__title">Computer Engineer</h3>
              <span class="qualification__subtitle">Peru - University</span>
              <div class="qualification__calender">
                <i class="uil uil-calendar-alt"></i>
                2009 - 2014
              </div>
            </div>
            <div>
              <span class="qualification__rounder"></span>
              <span class="qualification__line"></span>
            </div>
          </div>
          <div class="qualification__data">
            <div></div>
            <div>
              <span class="qualification__rounder"></span>
              <span class="qualification__line"></span>
            </div>
            <div>
              <h3 class="qualification__title">Web Design</h3>
              <span class="qualification__subtitle">Span - Institute</span>
              <div class="qualification__calender">
                <i class="uil uil-calendar-alt"></i>
                2014 - 2017
              </div>
            </div>
          </div>
          </div>

        <div class="qualification__content" v-show="activeTab === 'work'">
          <div class="qualification__data">
            <div>
              <h3 class="qualification__title">Software Engineer</h3>
              <span class="qualification__subtitle">Microsoft - Peru</span>
              <div class="qualification__calender">
                <i class="uil uil-calendar-alt"></i>
                2016 - 2018
              </div>
            </div>
            <div>
              <span class="qualification__rounder"></span>
              <span class="qualification__line"></span>
            </div>
          </div>
          </div>
      </div>
    </div>
  </section>
</template>

<script>
export default {
  name: 'Qualification',
  data() {
    return {
      activeTab: 'education' // Inicia con la pestaña 'education' activa
    };
  },
  methods: {
    setActiveTab(tabName) {
      this.activeTab = tabName;
    }
  }
}
</script>
<style scoped>
.qualification__container {
  padding-bottom: 2rem;
}
.qualification__tabs {
  display: flex;
  justify-content: space-evenly;
  margin-bottom: var(--mb-2);
}
.qualification__button {
  font-size: var(--h3-font-size);
  font-weight: var(--font-medium);
  cursor: pointer;
  transition: color .3s;
}
.qualification__button:hover {
  color: var(--first-color);
}
.qualification__icon {
  font-size: 1.8rem;
  margin-right: var(--mb-0-25);
}
.qualification__active {
  color: var(--first-color);
}
.qualification__sections {
  margin-top: 2rem;
}
/* La lógica de mostrar/ocultar ahora la maneja Vue con v-show o v-if */
.qualification__data {
  display: grid;
  grid-template-columns: 1fr max-content 1fr;
  column-gap: 1.5rem;
  margin-bottom: 1.5rem; /* Espaciado entre items de la timeline */
}
.qualification__title {
  font-size: var(--normal-font-size);
  font-weight: var(--font-medium);
}
.qualification__subtitle {
  display: inline-block;
  font-size: var(--small-font-size);
  margin-bottom: var(--mb-1);
}
.qualification__calendar {
  font-size: var(--smaller-font-size);
  color: var(--text-color-light);
}
.qualification__rounder {
  display: inline-block;
  width: 13px;
  height: 13px;
  background-color: var(--first-color);
  border-radius: 50%;
}
.qualification__line {
  display: block;
  width: 1px;
  height: 100%;
  background-color: var(--first-color);
  transform: translate(6px, -7px);
}

/*==================== MEDIA QUERIES ====================*/
@media screen and (max-width: 350px) {
  .qualification__data {
    gap: .5rem;
  }
}
@media screen and (min-width: 568px) {
  .qualification__sections {
    display: grid;
    grid-template-columns: .6fr;
    justify-content: center;
  }
}
@media screen and (min-width: 768px) {
  .qualification__tabs {
    justify-content: center;
  }
  .qualification__button {
    margin: 0 var(--mb-1);
  }
  .qualification__sections {
    grid-template-columns: .5fr;
  }
}
</style>

Services.vue:
<template>
  <section class="services section" id="services">
    <h2 class="section__title">Services</h2>
    <span class="section__subtitle">What I offer</span>

    <div class="services__container container grid">
      <div class="services__content">
        <div>
          <i class="uil uil-web-grid services__icon"></i>
          <h3 class="services__title">Ui/Ux <br> Designer</h3>
        </div>
        <span @click="openModal('ui')" class="button button--flex button--small button--link services__button">
          View More
          <i class="uil uil-arrow-right button__icon"></i>
        </span>
        <div class="services__modal" :class="{'active-modal': activeModal === 'ui'}">
          <div class="services__modal-content">
            <h4 class="services__modal-title">Ui/Ux <br> Designer</h4>
            <i @click="closeModal" class="uil uil-times services__modal-close"></i>
            <ul class="services__modal-services grid">
              <li class="services__modal-service">
                <i class="uil uil-check-circle services__modal-icon"></i>
                <p>I develop the user interface.</p>
              </li>
              <li class="services__modal-service">
                <i class="uil uil-check-circle services__modal-icon"></i>
                <p>Web page development.</p>
              </li>
              </ul>
          </div>
        </div>
      </div>

      <div class="services__content">
        <div>
          <i class="uil uil-arrow services__icon"></i>
          <h3 class="services__title">Frontend <br> Developer</h3>
        </div>
        <span @click="openModal('frontend')" class="button button--flex button--small button--link services__button">
          View More
          <i class="uil uil-arrow-right button__icon"></i>
        </span>
        <div class="services__modal" :class="{'active-modal': activeModal === 'frontend'}">
          <div class="services__modal-content">
            <h4 class="services__modal-title">Frontend <br> Developer</h4>
            <i @click="closeModal" class="uil uil-times services__modal-close"></i>
            <ul class="services__modal-services grid">
              <li class="services__modal-service">
                  <i class="uil uil-check-circle services__modal-icon"></i>
                  <p>I develop the user interface.</p>
              </li>
              </ul>
          </div>
        </div>
      </div>
      
      </div>
  </section>
</template>

<script>
export default {
  name: 'Services',
  data() {
    return {
      activeModal: null // Puede ser 'ui', 'frontend', 'branding', o null
    };
  },
  methods: {
    openModal(modalId) {
      this.activeModal = modalId;
    },
    closeModal() {
      this.activeModal = null;
    }
  }
}
</script>
<style scoped>
.services__container {
  gap: 1.5rem;
  grid-template-columns: repeat(2, 1fr);
}
.services__content {
  position: relative;
  background-color: var(--container-color);
  padding: 3.5rem .5rem 1.25rem 1.5rem;
  border-radius: .25rem;
  box-shadow: 0 2px 4px rgba(0,0,0,.15);
  transition: .3s;
}
.services__content:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,.15);
}
.services__icon {
  display: block;
  font-size: 1.5rem;
  color: var(--first-color);
  margin-bottom: var(--mb-1);
}
.services__title {
  font-size: var(--h3-font-size);
  margin-bottom: var(--mb-1);
  font-weight: var(--font-medium);
}
.services__button {
  cursor: pointer;
  font-size: var(--small-font-size);
}
.services__button:hover .button__icon {
  transform: translateX(.25rem);
}
.services__modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,.5);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  z-index: var(--z-modal);
  opacity: 0;
  visibility: hidden;
  transition: .3s;
}
.services__modal-content {
  position: relative;
  background-color: var(--container-color);
  padding: 1.5rem;
  border-radius: .5rem;
}
.services__modal-services {
  row-gap: 1rem;
}
.services__modal-service {
  display: flex;
}
.services__modal-title {
  font-size: var(--h3-font-size);
  font-weight: var(--font-medium);
  margin-bottom: var(--mb-1-5);
}
.services__modal-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1.5rem;
  color: var(--first-color);
  cursor: pointer;
}
.services__modal-icon {
  color: var(--first-color);
  margin-right: var(--mb-0-25);
}
.active-modal {
  opacity: 1;
  visibility: visible;
}

/* Media Queries */
@media screen and (max-width: 350px) {
  .services__container {
    grid-template-columns: max-content;
    justify-content: center;
  }
  .services__content {
    padding-right: 3.5rem;
  }
  .services__modal {
    padding: 0 .5rem;
  }
}
@media screen and (min-width: 768px) {
  .services__container {
    grid-template-columns: repeat(3, 218px);
    justify-content: center;
    column-gap: 2rem;
  }
  .services__icon {
    font-size: 2rem;
  }
  .services__content {
    padding: 6rem 0 2rem 2.5rem;
  }
  .services__modal-content {
    width: 450px;
  }
}
@media screen and (min-width: 1024px) {
  .services__container {
    grid-template-columns: repeat(3, 238px);
  }
}
</style>

Skills.vue:
<template>
  <section class="skills section" id="skills">
    <h2 class="section__title">Skills</h2>
    <span class="section__subtitle">My technical level</span>
    <div class="skills__container container grid">
      <div :class="['skills__content', openSkill === 'frontend' ? 'skills__open' : 'skills__close']">
        <div class="skills__header" @click="toggleSkill('frontend')">
          <i class="uil uil-brackets-curly skills__icon"></i>
          <div>
            <h1 class="skills__title">Frontend Developer</h1>
            <span class="skills__subtitle">More than 4 years</span>
          </div>
          <i class="uil uil-angle-down skills__arrow"></i>
        </div>
        <div class="skills__list grid">
          <div class="skills__data">
            <div class="skills__titles">
              <h3 class="skills__name">HTML</h3>
              <span class="skills__number">90%</span>
            </div>
            <div class="skills__bar">
              <span class="skills__percentage skills__html"></span>
            </div>
          </div>
          <div class="skills__data">
            <div class="skills__titles">
              <h3 class="skills__name">CSS</h3>
              <span class="skills__number">80%</span>
            </div>
            <div class="skills__bar">
              <span class="skills__percentage skills__css"></span>
            </div>
          </div>
          <div class="skills__data">
            <div class="skills__titles">
              <h3 class="skills__name">JAVASCRIPT</h3>
              <span class="skills__number">70%</span>
            </div>
            <div class="skills__bar">
              <span class="skills__percentage skills__js"></span>
            </div>
          </div>
          <div class="skills__data">
            <div class="skills__titles">
              <h3 class="skills__name">React</h3>
              <span class="skills__number">85%</span>
            </div>
            <div class="skills__bar">
              <span class="skills__percentage skills__react"></span>
            </div>
          </div>
        </div>
      </div>

      <div :class="['skills__content', openSkill === 'backend' ? 'skills__open' : 'skills__close']">
        <div class="skills__header" @click="toggleSkill('backend')">
          <i class="uil uil-server-network skills__icon"></i>
          <div>
            <h1 class="skills__title">Backend Developer</h1>
            <span class="skills__subtitle">More than 2 years</span>
          </div>
          <i class="uil uil-angle-down skills__arrow"></i>
        </div>
        <div class="skills__list grid">
          <div class="skills__data">
              <div class="skills__titles">
                  <h3 class="skills__name">PHP</h3>
                  <span class="skills__number">90%</span>
              </div>
              <div class="skills__bar">
                  <span class="skills__percentage skills__php"></span>
              </div>
          </div>
          </div>
      </div>

      <div :class="['skills__content', openSkill === 'designer' ? 'skills__open' : 'skills__close']">
          <div class="skills__header" @click="toggleSkill('designer')">
              <i class="uil uil-swatchbook skills__icon"></i>
              <div>
                  <h1 class="skills__title">Designer</h1>
                  <span class="skills__subtitle">More than 5 years</span>
              </div>
              <i class="uil uil-angle-down skills__arrow"></i>
          </div>
          <div class="skills__list grid">
              <div class="skills__data">
                  <div class="skills__titles">
                      <h3 class="skills__name">FIGMA</h3>
                      <span class="skills__number">60%</span>
                  </div>
                  <div class="skills__bar">
                      <span class="skills__percentage skills__figma"></span>
                  </div>
              </div>
              </div>
      </div>
    </div>
  </section>
</template>

<script>
export default {
  name: 'Skills',
  data() {
    return {
      // Mantiene el estado de la sección abierta.
      // Inicia con 'frontend' para que esté abierto por defecto.
      openSkill: 'frontend' 
    };
  },
  methods: {
    toggleSkill(skill) {
      // Si el skill clickeado ya está abierto, ciérralo.
      // Si no, ábrelo.
      if (this.openSkill === skill) {
        this.openSkill = null;
      } else {
        this.openSkill = skill;
      }
    }
  }
}
</script>
<style scoped>
.skills__container {
  row-gap: 0;
}
.skills__header {
  display: flex;
  align-items: center;
  margin-bottom: var(--mb-2-5);
  cursor: pointer;
}
.skills__icon,
.skills__arrow {
  font-size: 2rem;
  color: var(--first-color);
}
.skills__icon {
  margin-right: var(--mb-0-75);
}
.skills__title {
  font-size: var(--h3-font-size);
}
.skills__subtitle {
  font-size: var(--small-font-size);
  color: var(--text-color-light);
}
.skills__arrow {
  margin-left: auto;
  transition: .4s;
}
.skills__list {
  row-gap: 1.5rem;
  padding-left: 2.7rem;
}
.skills__titles {
  display: flex;
  justify-content: space-between;
  margin-bottom: var(--mb-0-5);
}
.skills__name {
  font-size: var(--normal-font-size);
  font-weight: var(--font-medium);
}
.skills__bar,
.skills__percentage {
  height: 5px;
  border-radius: .25rem;
}
.skills__bar {
  background-color: var(--first-color-lighter);
}
.skills__percentage {
  display: block;
  background-color: var(--first-color);
}
.skills__html { width: 90%; }
.skills__css { width: 80%; }
.skills__js { width: 70%; }
.skills__react { width: 85%; }
.skills__php { width: 90%; }
.skills__node { width: 70%; }
.skills__firebase { width: 60%; }
.skills__python { width: 65%; }
.skills__figma { width: 60%; }
.skills__sketch { width: 70%; }
.skills__photoshop { width: 80%; }

.skills__close .skills__list {
  height: 0;
  overflow: hidden;
}
.skills__open .skills__list {
  height: max-content;
  margin-bottom: var(--mb-2-5);
}
.skills__open .skills__arrow {
  transform: rotate(-180deg);
}

/* Media Queries */
@media screen and (max-width: 350px) {
  .skills__title {
    font-size: var(--normal-font-size);
  }
}
@media screen and (min-width: 568px) {
  .skills__container {
    grid-template-columns: repeat(2, 1fr);
  }
}
</style>

Testimonial.vue:
<template>
  <section class="testimonial section">
    <h2 class="section__title">Testimonial</h2>
    <span class="section__subtitle">My client saying</span>

    <div class="testimonial_container container swiper-container">
      <div class="swiper-wrapper">
        <div class="testimonial__content swiper-slide">
          <div class="testimonial__data">
            <div class="testimonial__header">
              <img src="@/assets/img/testimonial1.jpg" alt="" class="testimonial__img">
              <div>
                <h3 class="testimonial__name">Sara Smith</h3>
                <span class="testimonial__client">Client</span>
              </div>
            </div>
            <div>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
            </div>
          </div>
          <p class="testimonial__description">I get a good impression, I carry out my project with all the possible quality and attention and support 24 hours a day.</p>
        </div>

        <div class="testimonial__content swiper-slide">
          <div class="testimonial__data">
            <div class="testimonial__header">
              <img src="@/assets/img/testimonial2.jpg" alt="" class="testimonial__img">
              <div>
                <h3 class="testimonial__name">Matt Robinson</h3>
                <span class="testimonial__client">Client</span>
              </div>
            </div>
            <div>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
            </div>
          </div>
          <p class="testimonial__description">I get a good impression, I carry out my project with all the possible quality and attention and support 24 hours a day.</p>
        </div>

        <div class="testimonial__content swiper-slide">
          <div class="testimonial__data">
            <div class="testimonial__header">
              <img src="@/assets/img/testimonial3.jpg" alt="" class="testimonial__img">
              <div>
                <h3 class="testimonial__name">Raul Harris</h3>
                <span class="testimonial__client">Client</span>
              </div>
            </div>
            <div>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
              <i class="uil uil-star testimonial__icon-star"></i>
            </div>
          </div>
          <p class="testimonial__description">I get a good impression, I carry out my project with all the possible quality and attention and support 24 hours a day.</p>
        </div>
      </div>

      <div class="swiper-pagination swiper-pagination-testimonial"></div>
    </div>
  </section>
</template>

<script setup>
import { onMounted } from 'vue';

// Importaciones de Swiper
import Swiper from 'swiper';
import { Pagination } from 'swiper/modules';

// Importa los estilos de Swiper
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';

onMounted(() => {
  new Swiper('.testimonial_container', {
    modules: [Pagination],
    loop: true,
    grabCursor: true,
    spaceBetween: 48,
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
      dynamicBullets: true,
    },
    breakpoints: {
      568: {
        slidesPerView: 2,
      },
    },
  });
});
</script>
<style scoped>
/* Estilos globales para Swiper que necesitan aplicarse desde este componente */
:global(.testimonial_container .swiper-pagination-bullet-active) {
  background-color: var(--first-color);
}
:global(.testimonial_container .swiper-pagination-testimonial) {
  bottom: 0;
}
/* Fin de estilos globales */

.testimonial__data,
.testimonial__header {
  display: flex;
}
.testimonial__data {
  justify-content: space-between;
  margin-bottom: var(--mb-1);
}
.testimonial__img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  margin-right: var(--mb-0-75);
}
.testimonial__name {
  font-size: var(--h3-font-size);
  font-weight: var(--font-medium);
}
.testimonial__client {
  font-size: var(--small-font-size);
  color: var(--text-color-light);
}
.testimonial__description {
  margin-bottom: var(--mb-2-5);
}
.testimonial__icon-star {
  color: var(--first-color);
}

/* Media Queries */
@media screen and (max-width: 350px) {
  .testimonial__data,
  .testimonial__header {
    flex-direction: column;
    align-items: center;
  }
  .testimonial__img {
    margin-right: 0;
    margin-bottom: var(--mb-0-25);
  }
  .testimonial__data,
  .testimonial__description {
    text-align: center;
  }
}
</style>